version: '3.8'

services:
  # BVOTE Backend API
  bvote-backend:
    build: .
    container_name: bvote-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=sqlite:./data/bvote.db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-char-encryption-key-here!!}
      - ADMIN_KEY=${ADMIN_KEY:-WEBBVOTE2025$ABC}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./chrome-profiles:/app/chrome-profiles
    depends_on:
      - redis
    networks:
      - bvote-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: bvote-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    networks:
      - bvote-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bvote-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - bvote-backend
    networks:
      - bvote-network

  # Database (Optional - if using MySQL instead of SQLite)
  # mysql:
  #   image: mysql:8.0
  #   container_name: bvote-mysql
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
  #     MYSQL_DATABASE: bvote
  #     MYSQL_USER: bvote
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD:-bvotepassword}
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #   ports:
  #     - "3306:3306"
  #   networks:
  #     - bvote-network

  # MongoDB (Optional - if using MongoDB instead of SQLite)
  # mongodb:
  #   image: mongo:6
  #   container_name: bvote-mongodb
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-adminpassword}
  #     MONGO_INITDB_DATABASE: bvote
  #   volumes:
  #     - mongodb-data:/data/db
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - bvote-network

  # Monitoring with Prometheus (Optional)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: bvote-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus-data:/prometheus
  #   networks:
  #     - bvote-network

  # Grafana Dashboard (Optional)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: bvote-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   networks:
  #     - bvote-network

volumes:
  redis-data:
  # mysql-data:
  # mongodb-data:
  # prometheus-data:
  # grafana-data:

networks:
  bvote-network:
    driver: bridge
